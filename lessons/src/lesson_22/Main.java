package lesson_22;

/**
 * Created by java2 on 14.09.17.
 */
public class Main {
    public static void main(String[] args) {
        SyncString syncString = new SyncString();
        String s1 = "«Почему паттерны, мы же и без них отлично кодим?» — довольно частый вопрос людей, " +
                "«программирующих» на любом из ООП языков. " +
                "Хочу эту ситуацию несколько прояснить: современное программирование уже не ремесло, а скорее фабрика, и важен не только результат, " +
                "а скорость разработки, расширяемость и прочее. Это все не достижимо без грамотного проектирования. Во-вторых, ч" +
                "тение подобной литературы даст понимание самой организации Java, так как практически все в этом языке строится на паттернах.";
        String s2 = "Замечательная книга для новичка. В ней неплохо расписаны азы создания j2EE приложений на основе сервлетов и JSP. " +
                "Мастера скажут, что это уже не актуально, и даже про EJB ничего не сказано. Но эта книга рассчитана на людей, " +
                "только начавших знакомство с J2EE и работу серверных приложений слабо представляющих. Предоставляет базовые навыки разработки для Интернет. " +
                "Так что свою миссию данное издание выполняет на все сто. " +
                "Изучение фреймворков и других технологий – это уже отдельная история. " +
                "Отдельно стоит сказать об отвратительном качестве печати: рисунки нечитабельны.";
        String s3 = "Отличная книга по каркасу JSF из разряда must_have. Показывает все плюсы разработки на JSF в " +
                "отношении удобства и скорости разработки, принцип построения приложения на «бобах» (beans), " +
                "и многие другие преимущества этой технологии.";

        RunSetStrings thread1 = new RunSetStrings(s1);
        RunSetStrings thread2 = new RunSetStrings(s2);
        RunSetStrings thread3 = new RunSetStrings(s3);

        new Thread(thread1, "Thread1").start();
        new Thread(thread2, "Thread2").start();
        new Thread(thread3, "Thread3").start();

        try {
            Thread.sleep(100);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }

        System.out.println(syncString.getStrings().size());
       // System.out.println(synchronizedSet(syncString.getStrings()).toString());
    }
}
